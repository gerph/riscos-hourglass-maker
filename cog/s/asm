          AREA |C$$code|, CODE, READONLY

; constants
width             * 32
height            * 32
period            * 3
wordsperrow       * 2
nwords            * 472
nframes           * 9
active_x          * 16
active_y          * 16
percentage_height        * 0

; Workspace for changing the hourglass rendition
                  ^ 0, r12
hg_framenum       # 4                         ; frame number
hg_percentage     # 4                         ; percentage to show
hg_percentagenow  # 4                         ; percentage being shown
hg_leds           # 4                         ; LED flags (N/I)
hg_oldpointer     # 4                         ; Old pointer configuration
hg_oldcolours     # 4 * 3                     ; Old palette entries
hg_word           # 12                        ; OS_Word block
hg_currentdata    # 4 * wordsperrow * (height + percentage_height)  ; Current data for the hourglass
hg_workspacesize  * :INDEX: @                 ; Size of this workspace

; SWI numbers
XOS_Byte          * 0x20006
XOS_Word          * 0x20007
XOS_ReadPalette   * 0x2002F

; -------------------------------------------------
        MACRO
$label  SIGNATURE
        ALIGN   4
        =       "$label",0
        ALIGN   4
        DCD     &FF000000+(:LEN:"$label"+4):AND::NOT:3
$label
        MEND


; Data for deltas between frames
deltas
          ; frame 0
          DCD     &00000000, &00000000, &00000000
          DCD     &00000008, &58000000, &00000005
          DCD     &00000010, &58000000, &00000025
          DCD     &00000018, &58000000, &00000025
          DCD     &00000020, &5400a000, &00098025
          DCD     &00000028, &54095400, &00256015
          DCD     &00000030, &55a55600, &00955695
          DCD     &00000038, &55555600, &00955555
          DCD     &00000040, &55555400, &00255555
          DCD     &00000048, &55555800, &00055555
          DCD     &00000050, &29556000, &00095558
          DCD     &00000058, &00956000, &00015580
          DCD     &00000060, &00155000, &00095600
          DCD     &00000068, &002555a8, &0a555400
          DCD     &00000070, &00255554, &25555800
          DCD     &00000078, &00055554, &15555800
          DCD     &00000080, &00055554, &15555800
          DCD     &00000088, &00255554, &25555800
          DCD     &00000090, &001556a0, &02a55400
          DCD     &00000098, &00956000, &00095600
          DCD     &000000a0, &02556000, &00015580
          DCD     &000000a8, &a5555000, &0009555a
          DCD     &000000b0, &55555800, &00255555
          DCD     &000000b8, &55555600, &00155555
          DCD     &000000c0, &55555500, &00955555
          DCD     &000000c8, &56255600, &00955895
          DCD     &000000d0, &54025800, &00256025
          DCD     &000000d8, &5400a000, &000a0025
          DCD     &000000e0, &58000000, &00000025
          DCD     &000000e8, &58000000, &00000005
          DCD     &000000f0, &60000000, &00000009
          DCD     &000000f8, &00000000, &00000000
          DCD     -1
          ; frame 1
          DCD     &00000008, &40000000, &00000095
          DCD     &00000010, &60000000, &00000095
          DCD     &00000018, &60028000, &00000095
          DCD     &00000020, &50095000, &00000095
          DCD     &00000028, &58255400, &00260095
          DCD     &00000030, &55555400, &00956255
          DCD     &00000038, &55555800, &02555555
          DCD     &00000040, &55556000, &00555555
          DCD     &00000048, &55556000, &00955555
          DCD     &00000050, &29554000, &00255558
          DCD     &00000058, &00956000, &00095580
          DCD     &00000060, &00955568, &00095600
          DCD     &00000068, &00255554, &00055400
          DCD     &00000070, &00255554, &0a555800
          DCD     &00000078, &00055554, &25555800
          DCD     &00000080, &00255558, &15555800
          DCD     &00000088, &00255680, &25555800
          DCD     &00000090, &00155000, &25555600
          DCD     &00000098, &00956000, &0aa95600
          DCD     &000000a0, &02555800, &00015580
          DCD     &000000a8, &a5555400, &00025556
          DCD     &000000b0, &55555600, &00015555
          DCD     &000000b8, &55555580, &00095555
          DCD     &000000c0, &55655580, &00255555
          DCD     &000000c8, &55025600, &002555a5
          DCD     &000000d0, &55002800, &00255805
          DCD     &000000d8, &55000000, &00096009
          DCD     &000000e0, &56000000, &00008009
          DCD     &000000e8, &56000000, &00000001
          DCD     &000000f0, &5a000000, &00000002
          DCD     -1
          ; frame 2
          DCD     &00000008, &00000000, &00000295
          DCD     &00000010, &80020000, &00000255
          DCD     &00000018, &80258000, &00000255
          DCD     &00000020, &40955000, &00000255
          DCD     &00000028, &62555000, &00000255
          DCD     &00000030, &55556000, &00960255
          DCD     &00000038, &55554000, &02556955
          DCD     &00000040, &55558000, &01555555
          DCD     &00000048, &55558000, &02555555
          DCD     &00000050, &29554000, &00955558
          DCD     &00000058, &00555558, &00255580
          DCD     &00000060, &00955558, &00055600
          DCD     &00000070, &00055554, &00255800
          DCD     &00000078, &00055558, &02555800
          DCD     &00000080, &00255680, &25555800
          DCD     &00000088, &00255800, &25555800
          DCD     &00000090, &00255000, &25555600
          DCD     &00000098, &00955800, &25555500
          DCD     &000000a0, &02555600, &0aa95580
          DCD     &000000a8, &a5555580, &00025556
          DCD     &000000b0, &55555560, &00025555
          DCD     &000000b8, &55555540, &00025555
          DCD     &000000c0, &55625580, &00015555
          DCD     &000000c8, &55402a00, &00095565
          DCD     &000000d0, &55400000, &00055581
          DCD     &000000d8, &55400000, &00095402
          DCD     &000000e0, &55400000, &00009002
          DCD     &000000e8, &55800000, &00000000
          DCD     &000000f0, &aa000000, &00000000
          DCD     -1
          ; frame 3
          DCD     &00000008, &00000000, &00000298
          DCD     &00000010, &002a0000, &00000954
          DCD     &00000018, &00958000, &00000956
          DCD     &00000020, &02554000, &00000955
          DCD     &00000028, &a9554000, &00000955
          DCD     &00000030, &55558000, &00800955
          DCD     &00000038, &55550000, &025a0955
          DCD     &00000040, &55560000, &01555555
          DCD     &00000048, &55550000, &09555555
          DCD     &00000050, &a9556550, &09555560
          DCD     &00000058, &00555558, &02555580
          DCD     &00000060, &00955558, &00955600
          DCD     &00000068, &00255554, &00055800
          DCD     &00000070, &00055568, &00055800
          DCD     &00000078, &00255680, &00255800
          DCD     &00000080, &00255800, &02555800
          DCD     &00000088, &00255000, &25555800
          DCD     &00000090, &00255800, &25555400
          DCD     &00000098, &00955600, &25555500
          DCD     &000000a0, &02555540, &05555580
          DCD     &000000a8, &a5555560, &0aaa555a
          DCD     &000000b0, &55555560, &00009555
          DCD     &000000b8, &555a5540, &00009555
          DCD     &000000c0, &55602980, &00005555
          DCD     &000000c8, &55600000, &00025555
          DCD     &000000d0, &55600000, &00025560
          DCD     &000000d8, &95500000, &00015580
          DCD     &000000e0, &15500000, &00009600
          DCD     &000000e8, &25600000, &00002800
          DCD     &000000f0, &0a000000, &00000000
          DCD     -1
          ; frame 4
          DCD     &00000008, &00800000, &000002a0
          DCD     &00000010, &025a0000, &00002560
          DCD     &00000018, &01550000, &00001558
          DCD     &00000020, &09550000, &00002554
          DCD     &00000028, &a5560000, &00002556
          DCD     &00000030, &55560000, &00002555
          DCD     &00000038, &55540000, &00002555
          DCD     &00000040, &55560000, &015a9555
          DCD     &00000048, &5555a560, &09555555
          DCD     &00000050, &a9555550, &05555560
          DCD     &00000058, &02555558, &05555580
          DCD     &00000060, &00955558, &02555600
          DCD     &00000068, &00255560, &00955800
          DCD     &00000070, &00255600, &00255800
          DCD     &00000078, &00255800, &00055800
          DCD     &00000080, &00255800, &00255800
          DCD     &00000088, &00255800, &02555800
          DCD     &00000090, &00255580, &09555400
          DCD     &00000098, &00955560, &25555500
          DCD     &000000a0, &02555558, &05555580
          DCD     &000000a8, &a9555550, &0955555a
          DCD     &000000b0, &55555560, &0aa89555
          DCD     &000000b8, &55580a80, &00001555
          DCD     &000000c0, &55580000, &00001555
          DCD     &000000c8, &55580000, &00009555
          DCD     &000000d0, &95580000, &00009558
          DCD     &000000d8, &25540000, &00005560
          DCD     &000000e0, &05540000, &00009540
          DCD     &000000e8, &09580000, &00002980
          DCD     &000000f0, &02000000, &00000000
          DCD     -1
          ; frame 5
          DCD     &00000008, &02800000, &00000200
          DCD     &00000010, &09580000, &00002580
          DCD     &00000018, &25540000, &00005560
          DCD     &00000020, &15540000, &00009550
          DCD     &00000028, &95580000, &0000955a
          DCD     &00000030, &55580000, &00009555
          DCD     &00000038, &55580000, &00001555
          DCD     &00000040, &5556a540, &00001555
          DCD     &00000048, &55555560, &095a5555
          DCD     &00000050, &09555550, &0555556a
          DCD     &00000058, &02555550, &25555580
          DCD     &00000060, &00955580, &25555600
          DCD     &00000068, &00255600, &09555800
          DCD     &00000070, &00255800, &00955800
          DCD     &00000078, &00255800, &00255800
          DCD     &00000080, &00255800, &00055800
          DCD     &00000088, &00255580, &00255800
          DCD     &00000090, &00255558, &00955800
          DCD     &00000098, &00955558, &09555600
          DCD     &000000a0, &02555558, &05555540
          DCD     &000000a8, &a9555550, &0555555a
          DCD     &000000b0, &55562aa0, &09555555
          DCD     &000000b8, &55540000, &02a82555
          DCD     &000000c0, &55560000, &00002555
          DCD     &000000c8, &55560000, &00002555
          DCD     &000000d0, &25560000, &00002556
          DCD     &000000d8, &09550000, &00002558
          DCD     &000000e0, &02560000, &00001550
          DCD     &000000e8, &00a80000, &00002960
          DCD     &000000f0, &00000000, &00000080
          DCD     -1
          ; frame 6
          DCD     &00000008, &25800000, &00000000
          DCD     &00000010, &15500000, &00002400
          DCD     &00000018, &95500000, &00025500
          DCD     &00000020, &55600000, &00015580
          DCD     &00000028, &55600000, &0002556a
          DCD     &00000030, &55600200, &00025555
          DCD     &00000038, &5550a580, &00005555
          DCD     &00000040, &55555540, &00009555
          DCD     &00000048, &55555560, &00005555
          DCD     &00000050, &09555560, &0559556a
          DCD     &00000058, &02555580, &25555580
          DCD     &00000060, &00155600, &25555600
          DCD     &00000068, &00255800, &25555800
          DCD     &00000070, &00255000, &09555800
          DCD     &00000078, &00255800, &00955800
          DCD     &00000080, &00255580, &00255800
          DCD     &00000088, &00255558, &00055800
          DCD     &00000090, &00155554, &00255400
          DCD     &00000098, &00955558, &00955600
          DCD     &000000a0, &02555558, &02555540
          DCD     &000000a8, &a555aaa0, &0955555a
          DCD     &000000b0, &55550000, &09555555
          DCD     &000000b8, &55550000, &0255a555
          DCD     &000000c0, &55558000, &00a80955
          DCD     &000000c8, &55558000, &00000955
          DCD     &000000d0, &81554000, &00000955
          DCD     &000000d8, &02554000, &00000956
          DCD     &000000e0, &00958000, &00000956
          DCD     &000000e8, &00280000, &00000954
          DCD     &000000f0, &00000000, &000000a8
          DCD     -1
          ; frame 7
          DCD     &00000008, &95800000, &00000000
          DCD     &00000010, &55800000, &00002000
          DCD     &00000018, &55800000, &00025802
          DCD     &00000020, &55800000, &00095601
          DCD     &00000028, &55800800, &00055589
          DCD     &00000030, &5540a600, &00095555
          DCD     &00000038, &55695580, &00015555
          DCD     &00000040, &55555540, &00025555
          DCD     &00000048, &55555540, &00025555
          DCD     &00000050, &09555500, &00025568
          DCD     &00000058, &02555400, &25555500
          DCD     &00000060, &00155000, &25555600
          DCD     &00000068, &00255000, &25555400
          DCD     &00000070, &00255800, &15555800
          DCD     &00000078, &002555a0, &25555800
          DCD     &00000080, &00055558, &02955800
          DCD     &00000088, &00255554, &00055800
          DCD     &00000090, &00155558, &00055400
          DCD     &00000098, &00955558, &00255600
          DCD     &000000a0, &02556aa0, &00955560
          DCD     &000000a8, &95558000, &0255555a
          DCD     &000000b0, &55558000, &01555555
          DCD     &000000b8, &55554000, &01555555
          DCD     &000000c0, &55556000, &02558955
          DCD     &000000c8, &59556000, &00a80255
          DCD     &000000d0, &40955000, &00000255
          DCD     &000000d8, &80256000, &00000255
          DCD     &000000e0, &800a8000, &00000255
          DCD     &000000e8, &00000000, &00000255
          DCD     &000000f0, &00000000, &000000aa
          DCD     -1
          ; frame 8
          DCD     &00000000, &80000000, &00000000
          DCD     &00000008, &56000000, &00000001
          DCD     &00000010, &56000000, &00000009
          DCD     &00000018, &56000000, &00028009
          DCD     &00000020, &56000000, &00096005
          DCD     &00000028, &55009400, &00255625
          DCD     &00000030, &55895600, &00255555
          DCD     &00000038, &55555580, &00055555
          DCD     &00000040, &55555580, &00095555
          DCD     &00000048, &55555600, &00015555
          DCD     &00000050, &29555800, &00025568
          DCD     &00000058, &02556000, &00095500
          DCD     &00000060, &00156000, &29555600
          DCD     &00000068, &00155800, &25555400
          DCD     &00000070, &002555a0, &15555800
          DCD     &00000078, &00255554, &15555000
          DCD     &00000080, &00055554, &25555800
          DCD     &00000088, &00255554, &02955800
          DCD     &00000098, &00955aa0, &00095600
          DCD     &000000a0, &02554000, &000555a0
          DCD     &000000a8, &95554000, &0015555a
          DCD     &000000b0, &55556000, &00955555
          DCD     &000000b8, &55555000, &02555555
          DCD     &000000c0, &55555800, &02555955
          DCD     &000000c8, &5a955400, &00958055
          DCD     &000000d0, &50255800, &00280095
          DCD     &000000d8, &60096000, &00000095
          DCD     &000000e0, &60000000, &00000095
          DCD     &000000e8, &60000000, &00000095
          DCD     &000000f0, &80000000, &0000002a
          DCD     -1

; Offsets into the deltas for each frame
frame_deltas
          DCD     0  ; frame 0
          DCD     388  ; frame 1
          DCD     752  ; frame 2
          DCD     1104  ; frame 3
          DCD     1468  ; frame 4
          DCD     1832  ; frame 5
          DCD     2196  ; frame 6
          DCD     2560  ; frame 7
          DCD     2924  ; frame 8

; Palette data
palette
          DCB     0, 153, 14
          DCB     192, 192, 192
          DCB     0, 0, 0
          ALIGN

; Read the period between frames
; <=  R0 = cs between frames
hourglass_getframeperiod SIGNATURE
          EXPORT  hourglass_getframeperiod
          MOV     r0, #period
          MOV     pc, lr


; Read the size of the workspace block
; <=  R0 = size of hourglass workspace
hourglass_getwssize SIGNATURE
          EXPORT  hourglass_getwssize
          MOV     r0, #hg_workspacesize
          MOV     pc, lr

; Initialisation function
; =>  R0 = hourglass workspace
hourglass_init SIGNATURE
          EXPORT  hourglass_init
          MOV     r12, r0
          MOV     r0, #0
          STR     r0, hg_framenum
          STR     r0, hg_leds
          MOV     r0, #-1
          STR     r0, hg_percentagenow
          MOV     r0, #100
          STR     r0, hg_percentage
          LDR     r0, wordblock_0
          STR     r0, hg_word
          LDR     r0, wordblock_4
          ADR     r1, hg_currentdata
          ORR     r0, r0, r1, LSL #16         ; assign the low half word of pointer data
          STR     r0, hg_word + 4
          MOV     r0, r1, LSR #16             ; and the high half word
          STR     r0, hg_word + 8
; no need to initialise the currentdata; it will be updated by the first frame
          MOV     pc, lr

wordblock_0
          DCB     0                           ; define pointer shape
          DCB     3                           ; shape number (will toggle 3-4)
          DCB     (width*2+7)/8               ; width in bytes
          DCB     height                      ; height
wordblock_4
          DCB     active_x                    ; active x offset
          DCB     active_y                    ; active y offset
          DCB     0                           ; b0-7 of the address of the pointer data
          DCB     0                           ; b8-15 of address of the pointer data

; Start the hourglass
; =>  R0 = hourglass workspace
hourglass_start SIGNATURE
          EXPORT  hourglass_start
          STMFD   sp!, {r4, r5, lr}
          SUB     sp, sp, #8
          MOV     r12, r0
          MOV     r0, #0
          STR     r0, hg_framenum
          MOV     r0, #1
          MOV     r1, #25                     ; read pointer colour 1
          SWI     XOS_ReadPalette
          LDRVS   r2, =&81397900              ; purple if it wasn't set
          STR     r2, hg_oldcolours + 4 * 0
          MOV     r0, #2
          MOV     r1, #25                     ; read pointer colour 2
          SWI     XOS_ReadPalette
          LDRVS   r2, =&66FFFF00              ; yellow if it wasn't set
          STR     r2, hg_oldcolours + 4 * 1
          MOV     r0, #3
          MOV     r1, #25                     ; read pointer colour 3
          SWI     XOS_ReadPalette
          LDRVS   r2, =&00000000              ; black if it wasn't set
          STR     r2, hg_oldcolours + 4 * 2
; now set the palette up for our hourglass
          MOV     r1, sp
          ADRL    r2, palette
; colour 1
          MOV     r0, #1
          STRB    r0, [r1, #0]
          MOV     r0, #25                     ; set pointer colour 1
          STRB    r0, [r1, #1]
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #2]                ; red
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #3]                ; green
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #4]                ; blue
          MOV     r0, #12
          SWI     XOS_Word                    ; Set palette
; colour 2
          MOV     r0, #2
          STRB    r0, [r1, #0]
          MOV     r0, #25                     ; set pointer colour 1
          STRB    r0, [r1, #1]
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #2]                ; red
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #3]                ; green
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #4]                ; blue
          MOV     r0, #12
          SWI     XOS_Word                    ; Set palette
; colour 3
          MOV     r0, #3
          STRB    r0, [r1, #0]
          MOV     r0, #25                     ; set pointer colour 1
          STRB    r0, [r1, #1]
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #2]                ; red
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #3]                ; green
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #4]                ; blue
          MOV     r0, #12
          SWI     XOS_Word                    ; Set palette
          MOV     r1, #127                        ; invalid pointer number to read the pointer
          MOV     r0, #106                        ; select pointer
          SWI     XOS_Byte
          MOVVS   r1, #0                          ; if there was an error, turn off
          STR     r1, hg_oldpointer
          ADD     sp, sp, #8
          LDMFD   sp!, {r4, r5, lr}
          MOV     r0, r12
          B       hourglass_frame                 ; exit via the first frame

; Stop the hourglass
; =>  R0 = hourglass workspace
hourglass_stop SIGNATURE
          EXPORT  hourglass_stop
          STMFD   sp!, {r4, r5, lr}
          SUB     sp, sp, #8
          MOV     r12, r0
          MOV     r0, #-1
          STR     r0, hg_percentagenow
          MOV     r0, #100
          STR     r0, hg_percentage
          LDR     r4, hg_oldpointer               ; work out the old pointer shape
          BIC     r4, r4, #127                    ; turn off the pointer whilst we change colours
          MOV     r0, #106                        ; select pointer
          SWI     XOS_Byte
; restore the palette up for old pointer
          MOV     r1, sp
; colour 1
          ADR     r2, hg_oldcolours + 4 * 0 + 1
          MOV     r0, #1
          STRB    r0, [r1, #0]
          MOV     r0, #25                         ; set pointer colour 1
          STRB    r0, [r1, #1]
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #2]                    ; red
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #3]                    ; green
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #4]                    ; blue
          MOV     r0, #12
          SWI     XOS_Word                        ; Set palette
; colour 2
          ADR     r2, hg_oldcolours + 4 * 1 + 1
          MOV     r0, #2
          STRB    r0, [r1, #0]
          MOV     r0, #25                         ; set pointer colour 1
          STRB    r0, [r1, #1]
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #2]                    ; red
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #3]                    ; green
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #4]                    ; blue
          MOV     r0, #12
          SWI     XOS_Word                        ; Set palette
; colour 3
          ADR     r2, hg_oldcolours + 4 * 2 + 1
          MOV     r0, #3
          STRB    r0, [r1, #0]
          MOV     r0, #25                         ; set pointer colour 1
          STRB    r0, [r1, #1]
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #2]                    ; red
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #3]                    ; green
          LDRB    r0, [r2], #1
          STRB    r0, [r1, #4]                    ; blue
          MOV     r0, #12
          SWI     XOS_Word                        ; Set palette
          MOV     r1, r4                          ; re-select the old pointer number
          MOV     r0, #106                        ; select pointer
          SWI     XOS_Byte
          ADD     sp, sp, #8
          LDMFD   sp!, {r4, r5, pc}

; Frame update - sets the hourglass shape for the current frame
; =>  R0 = hourglass workspace
hourglass_frame SIGNATURE
          EXPORT  hourglass_frame
          STMFD   sp!, {r4, r5, lr}
          MOV     r12, r0
          LDR     r0, hg_framenum
          ADRL    r1, frame_deltas
          LDR     r0, [r1, r0, LSL #2]            ; offset within deltas for this frame
          ADRL    r1, deltas
          ADD     r1, r1, r0
          ADRL    r5, hg_currentdata
rowloop
          LDR     r3, [r1], #4                    ; r3 = currentdata offset
          CMP     r3, #-1                         ; end of the rows
          BEQ     rowend
      [ wordsperrow = 1
          LDR     r0, [r1], #4                    ; read a word
          STR     r0, [r3, r5]                    ; store into the currentdata
      ]
      [ wordsperrow = 2
          LDMIA   r1!, {r0, r2}                   ; read two word from rowdata
          STR     r0, [r3, r5]!                   ; store into the currentdata
          STR     r2, [r3, #4]                    ; store into the currentdata
      ]
      [ wordsperrow = 3
          LDMIA   r1!, {r0, r2, r4}               ; read a word from rowdata
          ADD     r3, r3, r5                      ; work out the line offset
          STMIA   r3!, {r0, r2, r4}               ; store into the currentdata
      ]
      [ wordsperrow = 4
          LDMIA   r1!, {r0, r2, r4, lr}           ; read a word from rowdata
          ADD     r3, r3, r5                      ; work out the line offset
          STMIA   r3!, {r0, r2, r4, lr}           ; store into the currentdata
      ]
          B       rowloop

rowend
          MOV     r0, #21                         ; Set Pointer parameters
          ADR     r1, hg_word
          SWI     XOS_Word

          LDRB    r1, hg_word + 1                 ; get the hourglass pointer number we will use
          RSB     lr, r1, #7                      ; toggles 3 to 4
          STRB    lr, hg_word + 1                 ; toggles the pointer number we use next time
          MOV     r0, #106                        ; select pointer
          SWI     XOS_Byte

          LDR     r0, hg_framenum
          ADD     r0, r0, #1
          TEQ     r0, #nframes
          MOVEQ   r0, #0                          ; reset counter; we've cycled
          STR     r0, hg_framenum
          LDMFD   sp!, {r4, r5, pc}

; Frame update within an IRQ
; =>  R12 = hourglass workspace
hourglass_frame_irq SIGNATURE
          EXPORT  hourglass_frame_irq
          STMFD   sp!, {r0-r3, r4, r5, r12, lr}
          MOV     r0, r12
          MRS     r4, CPSR
          BIC     r1, r4, #&F
          ORR     r1, r1, #&3
          MSR     CPSR_csxf, r1                    ; Enter SVC mode (keep bitness)
          MOV     r5, lr
          BL      hourglass_frame
          MOV     lr, r5
          MSR     CPSR_cxsf, r4                    ; Restore the mode
          LDMFD   sp!, {r0-r3, r4, r5, r12, pc}

; Set the percentage of the hourglass
; =>  R0 = hourglass workspace
;     R1 = percentage (0-99, or 100 to turn the percentage off)
hourglass_percentage SIGNATURE
          STMFD   sp!, {r4, r5, lr}
          EXPORT  hourglass_percentage
          MOV     r12, r0
          STR     r1, hg_percentage
          LDMFD   sp!, {r4, r5, pc}

          END
